{"version":3,"file":"static/js/134.1b372775.chunk.js","mappings":"iOA+CA,UAzCe,WACb,IAAAA,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAGlBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAS9BI,EAAQF,EAAaG,IAAI,UAAY,GAGnCC,GAASC,EAAAA,EAAAA,GAAQC,EAAAA,GAAoBJ,GAArCE,KAIFG,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAAUhB,GAjBL,SAAAS,GAEbH,EAAgBG,EAAKQ,UAAY,CAAEV,MAAOE,EAAKQ,UACjD,IAcyCF,SAAA,EACnCG,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWpB,EAAS,aAAW,IAAEqB,KAAK,WACtCF,EAAAA,EAAAA,KAAA,UAAAH,SAAQ,eAEVG,EAAAA,EAAAA,KAAA,MAAAH,SACO,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMY,KAAI,SAAAC,GAAK,OACdJ,EAAAA,EAAAA,KAAA,MAAAH,UACEG,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMb,GAAYc,GAAIJ,EAAMK,GAAGC,WAAWb,SACtDO,EAAMO,SAFFP,EAAMK,GAIV,QAKf,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useHttp } from 'hooks/useHttp';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieBySearch } from 'services/api';\n\nconst Movies = () => {\n  const { register, handleSubmit } = useForm();\n\n  // 1. Використовуємо хук для зміни URL, отримуємо параметри, та функцію, котра ставить ці параметри\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // 2. При використанні сабміта, встановлюємо параметр query в наш url\n  const submit = data => {\n    // console.log(data);\n    setSearchParams(data.queryStr && { query: data.queryStr });\n  };\n\n  // 3. Витягуємо query з нашого url через першу сутність хука useSearchParams\n  const query = searchParams.get('query') || '';\n\n  // 4. Робимо запит через власний хук useHttp, передаючи туди query в якості параметра пошуку\n  const { data } = useHttp(fetchMovieBySearch, query);\n\n  // 5. Створюємо об'єкт location, для того, щоб отримати поточний стан нашого url\n  // Це необхідно для передачі location в компонент 'MovieDetails'\n  const location = useLocation();\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(submit)}>\n        <input {...register('queryStr')} type=\"text\" />\n        <button>Search</button>\n      </form>\n      <ol>\n        {data?.map(movie => (\n          <li key={movie.id}>\n            <Link state={{ from: location }} to={movie.id.toString()}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_useForm","useForm","register","handleSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","data","useHttp","fetchMovieBySearch","location","useLocation","_jsxs","children","onSubmit","queryStr","_jsx","_objectSpread","type","map","movie","Link","state","from","to","id","toString","title"],"sourceRoot":""}