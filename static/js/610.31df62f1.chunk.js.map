{"version":3,"file":"static/js/610.31df62f1.chunk.js","mappings":"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","sources":["components/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: block;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #fff;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { BackLink } from 'components/BackLink';\nimport { useHttp } from 'hooks/useHttp';\nimport React, { Suspense, useRef } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\nimport { styled } from 'styled-components';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const { data: movie } = useHttp(fetchMovieById, movieId);\n  const { title, poster_path, vote_average, overview, genres } = movie;\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const genresList = genres?.map(genre => genre.name).join(' ');\n\n  return (\n    <MovieDetailsWrapper>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      <MovieCard>\n        <img\n          src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n          alt={title}\n        ></img>\n        <MovieInfo>\n          <h2>{title}</h2>\n          <p>User score: {(vote_average * 10).toFixed(2)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresList}</p>\n        </MovieInfo>\n      </MovieCard>\n      <hr />\n      <NavWrapper>\n        <SubTitle>Additional information</SubTitle>\n        <NavBox>\n          <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n          <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n        </NavBox>\n      </NavWrapper>\n      <hr />\n      <Suspense fallback={<h2>Loading...</h2>}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsWrapper>\n  );\n};\n\nexport default MovieDetails;\n\nexport const MovieDetailsWrapper = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const MovieCard = styled.div`\n  padding: 10px;\n  display: flex;\n  gap: 30px;\n`;\n\nexport const MovieInfo = styled.div`\n  max-width: 600px;\n`;\n\nexport const SubTitle = styled.h3`\n  text-align: justify;\n`;\n\nexport const NavWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const NavBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 5px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    background-color: #2a2a2a;\n    color: white;\n  }\n  &:hover:not(.active) {\n    background-color: lightblue;\n  }\n`;\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","BackLink","_ref","to","children","_jsxs","_jsx","HiArrowLeft","size","_location$state$from","_location$state","movieId","useParams","movie","useHttp","fetchMovieById","data","title","poster_path","vote_average","overview","genres","location","useLocation","backLinkHref","useRef","state","from","genresList","map","genre","name","join","MovieDetailsWrapper","current","MovieCard","src","concat","alt","MovieInfo","toFixed","NavWrapper","SubTitle","NavBox","StyledNavLink","Suspense","fallback","Outlet","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","NavLink","_templateObject7"],"sourceRoot":""}