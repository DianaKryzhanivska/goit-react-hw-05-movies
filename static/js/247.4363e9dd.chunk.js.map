{"version":3,"file":"static/js/247.4363e9dd.chunk.js","mappings":"yPAkCA,UA5Ba,WAAO,IAADA,EACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACME,GAAYC,EAAAA,EAAAA,GAAQC,EAAAA,GAAgBJ,GAA1CK,KAGR,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACG,EAAQ,CAAAD,SACM,QADNT,EACNG,EAAQQ,YAAI,IAAAX,OAAA,EAAZA,EAAcY,KAAI,SAAAC,GAAK,OACtBC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACEQ,IAAG,kCAAAC,OAAoCH,EAAMI,cAC7CC,IAAKL,EAAMM,KACXC,QAAS,SAAAC,GACPA,EAAEC,cAAcP,IAZZ,mCAaN,KAEFR,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAMM,QACVZ,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAMU,cATHV,EAAMW,GAUV,SAMjB,EAIO,IAAMd,EAAWe,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uG","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useHttp } from 'hooks/useHttp';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport { styled } from 'styled-components';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { data: castArr } = useHttp(fetchMovieCast, movieId);\n  const imgNotFound = 'https://placekitten.com/g/200/280';\n\n  return (\n    <>\n      <div>\n        <CastList>\n          {castArr.cast?.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n                alt={actor.name}\n                onError={e => {\n                  e.currentTarget.src = imgNotFound;\n                }}\n              ></img>\n              <p>{actor.name}</p>\n              <p>{actor.character}</p>\n            </li>\n          ))}\n        </CastList>\n      </div>\n    </>\n  );\n};\n\nexport default Cast;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n`;\n"],"names":["_castArr$cast","movieId","useParams","castArr","useHttp","fetchMovieCast","data","_jsx","_Fragment","children","CastList","cast","map","actor","_jsxs","src","concat","profile_path","alt","name","onError","e","currentTarget","character","id","styled","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}